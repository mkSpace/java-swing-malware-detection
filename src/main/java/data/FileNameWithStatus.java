package data;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class FileNameWithStatus {

    private final String fileName;
    private final int length;
    private int detectedLength;
    private List<Malware> detectedMalwareList;

    public FileNameWithStatus(String fileName, int length) {
        this.fileName = fileName;
        this.length = length;
        this.detectedLength = 0;
        this.detectedMalwareList = new ArrayList<>();
    }

    public String getFileName() {
        return fileName;
    }

    public int getLength() {
        return length;
    }

    public int getDetectedLength() {
        return detectedLength;
    }

    public void setDetectedLength(int detectedLength) {
        this.detectedLength = detectedLength;
    }

    public List<Malware> getDetectedMalwareList() {
        return detectedMalwareList;
    }

    public void setDetectedMalwareList(List<Malware> detectedMalwareList) {
        this.detectedMalwareList = detectedMalwareList;
    }

    public void addDetectedMalware(Malware malware) {
        this.detectedMalwareList.add(malware);
    }

    public float getDetectionRatio() {
        if (detectedLength <= 0) {
            return 0.0f;
        } else {
            return detectedLength / (float) length;
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        FileNameWithStatus that = (FileNameWithStatus) o;
        return getLength() == that.getLength() && getDetectedLength() == that.getDetectedLength() && Objects.equals(getFileName(), that.getFileName()) && Objects.equals(getDetectedMalwareList(), that.getDetectedMalwareList());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getFileName(), getLength(), getDetectedLength(), getDetectedMalwareList());
    }

    @Override
    public String toString() {
        return "[" + fileName + "] : " + getDetectionRatio() * 100;
    }
}
